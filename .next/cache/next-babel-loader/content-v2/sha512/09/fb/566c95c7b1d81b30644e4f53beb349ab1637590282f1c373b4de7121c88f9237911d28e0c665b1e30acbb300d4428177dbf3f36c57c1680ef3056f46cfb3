{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cesar/Code/portfoliocesar/src/pages/todo/index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import { Container } from './todo.style';\nimport { useState, useEffect } from 'react'; // import Button from '../components/Button';\n\nimport Tasks from '../components/Tasks';\nimport AddTask from '../components/AddTask';\n\nfunction ToDo() {\n  const {\n    0: tasks,\n    1: setTasks\n  } = useState([{\n    id: 1,\n    text: 'Dogwalker'\n  }, {\n    id: 2,\n    text: 'go to shopping'\n  }]);\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('tasks'));\n    if (storedTasks) setTasks(storedTasks);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]); // Add Task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n\n    const newTask = _objectSpread({\n      id\n    }, task);\n\n    setTasks([...tasks, newTask]);\n  }; // Delete task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de tarefas aqui\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : 'No tasks to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\nexport default ToDo;","map":{"version":3,"sources":["/home/cesar/Code/portfoliocesar/src/pages/todo/index.jsx"],"names":["useState","useEffect","Tasks","AddTask","ToDo","tasks","setTasks","id","text","storedTasks","JSON","parse","localStorage","getItem","setItem","stringify","addTask","task","Math","floor","random","newTask","deleteTask","filter","length"],"mappings":";;;;;;;;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,CACjC;AACEO,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADiC,EAKjC;AACED,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GALiC,CAAD,CAAlC;AAWAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAApB;AACA,QAAIJ,WAAJ,EAAiBH,QAAQ,CAACG,WAAD,CAAR;AAClB,GAHQ,EAGN,EAHM,CAAT;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAeV,KAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT,CAjBc,CAqBd;;AACA,QAAMW,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAMV,EAAE,GAAGW,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;;AACA,UAAMC,OAAO;AAAKd,MAAAA;AAAL,OAAYU,IAAZ,CAAb;;AAEAX,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWgB,OAAX,CAAD,CAAR;AACD,GALD,CAtBc,CA6Bd;;;AACA,QAAMC,UAAU,GAAIf,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACkB,MAAN,CAAcN,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAES;AAAhB;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGX,KAAK,CAACmB,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEnB,KAAd;AAAqB,MAAA,QAAQ,EAAEiB;AAA/B;AAAA;AAAA;AAAA;AAAA,YADD,GAGC,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;AAED,eAAelB,IAAf","sourcesContent":["// import { Container } from './todo.style';\nimport { useState, useEffect } from 'react';\n// import Button from '../components/Button';\nimport Tasks from '../components/Tasks';\nimport AddTask from '../components/AddTask';\n\nfunction ToDo() {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'Dogwalker',\n    },\n    {\n      id: 2,\n      text: 'go to shopping',\n    },\n  ]);\n\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('tasks'));\n    if (storedTasks) setTasks(storedTasks);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  // Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n\n    setTasks([...tasks, newTask]);\n  };\n\n  // Delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  return (\n    <div>\n      <h1>Lista de tarefas aqui</h1>\n      {/* <Button color='green' text='Add' /> */}\n\n      <AddTask onAdd={addTask} />\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} />\n      ) : (\n        'No tasks to show'\n      )}\n    </div>\n  );\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}