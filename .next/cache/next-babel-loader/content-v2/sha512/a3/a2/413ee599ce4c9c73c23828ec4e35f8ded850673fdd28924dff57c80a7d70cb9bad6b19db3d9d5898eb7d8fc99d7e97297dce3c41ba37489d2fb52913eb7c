{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cesar/Code/portfoliocesar/src/pages/components/Contact.jsx\",\n    _this = this;\n\nimport { Formik, Field, Form, ErrorMessage, useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport styles from '../styles/contact.module.scss';\nimport whats from '../../assets/images/whats.png'; // const isRequired = () => {\n//   return alert('Please fill all the fields');\n// };\n\nvar notify = function notify() {\n  return toast('ðŸ¦„ Wow so easy!', {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined\n  });\n};\n\nvar Contact = function Contact() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: '',\n        email: '',\n        message: ''\n      },\n      validationSchema: Yup.object({\n        name: Yup.string() // .max(15, 'Must be 15 characters or less')\n        .required(function () {\n          return notify();\n        }),\n        email: Yup.string().email('Invalid email address').required('Required'),\n        message: Yup.string().required('Required')\n      }),\n      onSubmit: function onSubmit(values, _ref) {\n        var setSubmitting = _ref.setSubmitting;\n        console.log('sent', JSON.stringify(values, null, 2));\n        axios.post('/api/mail', values).then(function (response) {\n          console.log(response);\n        })[\"catch\"](function (error) {\n          console.log(error);\n        });\n        setSubmitting(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        newestOnTop: false,\n        closeOnClick: true,\n        rtl: false,\n        pauseOnFocusLoss: true,\n        draggable: true,\n        pauseOnHover: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        id: \"contact\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: styles.form,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Get in touch!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"name\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"email\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"message\",\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"message\",\n            component: \"textarea\",\n            rows: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.mobilewhats,\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://wa.me/5511981263581\",\n              target: \"_blank\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Or text me on Whatsapp \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: whats,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 42\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_c = Contact;\nexport default Contact; // const SignupForm = () => {\n//   // Pass the useFormik() hook initial form values and a submit function that will\n//   // be called when the form is submitted\n//   const formik = useFormik({\n//     initialValues: {\n//       name: '',\n//       email: '',\n//       message: '',\n//     },\n//     onSubmit: (values) => {\n//       alert(JSON.stringify(values, null, 2));\n//       console.log(values);\n//       axios\n//         .post('/api/mail', values)\n//         .then(function (response) {\n//           console.log(response);\n//         })\n//         .catch(function (error) {\n//           console.log(error);\n//         });\n//     },\n//   });\n//   return (\n//     <form onSubmit={formik.handleSubmit}>\n//       <label htmlFor='name'>Name</label>\n//       <input\n//         id='name'\n//         name='name'\n//         type='text'\n//         onChange={formik.handleChange}\n//         value={formik.values.name}\n//       />\n//       <label htmlFor='email'>Email Address</label>\n//       <input\n//         id='email'\n//         name='email'\n//         type='email'\n//         onChange={formik.handleChange}\n//         value={formik.values.email}\n//       />\n//       <label htmlFor='message'>Message</label>\n//       <input\n//         id='message'\n//         name='message'\n//         type='text'\n//         onChange={formik.handleChange}\n//         value={formik.values.message}\n//       />\n//       <button type='submit'>Submit</button>\n//     </form>\n//   );\n// };\n// export default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/home/cesar/Code/portfoliocesar/src/pages/components/Contact.jsx"],"names":["Formik","Field","Form","ErrorMessage","useFormik","Yup","axios","ToastContainer","toast","styles","whats","notify","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Contact","name","email","message","object","string","required","values","setSubmitting","console","log","JSON","stringify","post","then","response","error","container","form","mobilewhats"],"mappings":"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","sourcesContent":["import { Formik, Field, Form, ErrorMessage, useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport styles from '../styles/contact.module.scss';\nimport whats from '../../assets/images/whats.png';\n\n// const isRequired = () => {\n//   return alert('Please fill all the fields');\n// };\n\nconst notify = () =>\n  toast('ðŸ¦„ Wow so easy!', {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\nconst Contact = () => {\n  return (\n    <>\n      <Formik\n        initialValues={{ name: '', email: '', message: '' }}\n        validationSchema={Yup.object({\n          name: Yup.string()\n            // .max(15, 'Must be 15 characters or less')\n            .required(() => notify()),\n\n          email: Yup.string()\n            .email('Invalid email address')\n            .required('Required'),\n\n          message: Yup.string().required('Required'),\n        })}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log('sent', JSON.stringify(values, null, 2));\n          axios\n            .post('/api/mail', values)\n            .then(function (response) {\n              console.log(response);\n            })\n            .catch(function (error) {\n              console.log(error);\n            });\n          setSubmitting(false);\n        }}\n      >\n        <ToastContainer\n          position='top-right'\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n        <div className={styles.container} id='contact'>\n          <Form className={styles.form}>\n            <h2>Get in touch!</h2>\n\n            <label htmlFor='name'>Name</label>\n            <Field name='name' type='text' />\n            <ErrorMessage name='name' />\n\n            <label htmlFor='email'>Email</label>\n            <Field name='email' type='email' />\n            <ErrorMessage name='email' />\n\n            <label htmlFor='message'>Message</label>\n            <Field name='message' component='textarea' rows='10' />\n            <ErrorMessage name='message' />\n\n            <div className={styles.mobilewhats}>\n              <a href='https://wa.me/5511981263581' target='_blank'>\n                <p>\n                  Or text me on Whatsapp <img src={whats} alt='' />\n                </p>\n              </a>\n\n              <button type='submit'>Send</button>\n            </div>\n          </Form>\n        </div>\n        <ToastContainer />\n      </Formik>\n    </>\n  );\n};\n\nexport default Contact;\n\n// const SignupForm = () => {\n//   // Pass the useFormik() hook initial form values and a submit function that will\n//   // be called when the form is submitted\n//   const formik = useFormik({\n//     initialValues: {\n//       name: '',\n//       email: '',\n//       message: '',\n//     },\n//     onSubmit: (values) => {\n//       alert(JSON.stringify(values, null, 2));\n//       console.log(values);\n//       axios\n//         .post('/api/mail', values)\n//         .then(function (response) {\n//           console.log(response);\n//         })\n//         .catch(function (error) {\n//           console.log(error);\n//         });\n//     },\n//   });\n//   return (\n//     <form onSubmit={formik.handleSubmit}>\n//       <label htmlFor='name'>Name</label>\n//       <input\n//         id='name'\n//         name='name'\n//         type='text'\n//         onChange={formik.handleChange}\n//         value={formik.values.name}\n//       />\n\n//       <label htmlFor='email'>Email Address</label>\n//       <input\n//         id='email'\n//         name='email'\n//         type='email'\n//         onChange={formik.handleChange}\n//         value={formik.values.email}\n//       />\n\n//       <label htmlFor='message'>Message</label>\n//       <input\n//         id='message'\n//         name='message'\n//         type='text'\n//         onChange={formik.handleChange}\n//         value={formik.values.message}\n//       />\n\n//       <button type='submit'>Submit</button>\n//     </form>\n//   );\n// };\n\n// export default SignupForm;\n"]},"metadata":{},"sourceType":"module"}