{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cesar/Code/portfoliocesar/src/pages/components/Contact.jsx\";\nimport { Formik, Field, Form, ErrorMessage, useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport styles from '../styles/contact.module.scss';\nimport whats from '../../assets/images/whats.png'; // const Contact = () => {\n//   return (\n//     <Formik\n//       initialValues={{ name: '', email: '', message: '' }}\n//       validationSchema={Yup.object({\n//         name: Yup.string()\n//           .max(15, 'Must be 15 characters or less')\n//           .required('Required'),\n//         email: Yup.string().email('Invalid email address').required('Required'),\n//         message: Yup.string().required('Required'),\n//       })}\n//       onSubmit={async (values, { setSubmitting }) => {\n//         console.log('sent', JSON.stringify(values, null, 2));\n//         setSubmitting(false);\n//       }}\n//     >\n//       <div className={styles.container} id='contact'>\n//         <Form className={styles.form}>\n//           <h2>Get in touch!</h2>\n//           <label htmlFor='name'>Name</label>\n//           <Field name='name' type='text' />\n//           <ErrorMessage name='name' />\n//           <label htmlFor='email'>Email</label>\n//           <Field name='email' type='email' />\n//           <ErrorMessage name='email' />\n//           <label htmlFor='message'>Message</label>\n//           <Field name='message' type='text' />\n//           <ErrorMessage name='message' />\n//           <div className={styles.mobilewhats}>\n//             <a href='https://wa.me/5511981263581' target='_blank'>\n//               <p>\n//                 Or text me on Whatsapp <img src={whats} alt='' />\n//               </p>\n//             </a>\n//             <button type='submit'>Send</button>\n//           </div>\n//         </Form>\n//       </div>\n//     </Formik>\n//   );\n// };\n// export default Contact;\n\nconst SignupForm = () => {\n  // Pass the useFormik() hook initial form values and a submit function that will\n  // be called when the form is submitted\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      message: ''\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n      console.log(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"name\",\n      name: \"name\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      value: formik.values.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      onChange: formik.handleChange,\n      value: formik.values.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"message\",\n      children: \"Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"message\",\n      name: \"message\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      value: formik.values.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["/home/cesar/Code/portfoliocesar/src/pages/components/Contact.jsx"],"names":["Formik","Field","Form","ErrorMessage","useFormik","Yup","axios","styles","whats","SignupForm","formik","initialValues","name","email","message","onSubmit","values","alert","JSON","stringify","console","log","handleSubmit","handleChange"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,YAA9B,EAA4CC,SAA5C,QAA6D,QAA7D;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,KAAP,MAAkB,+BAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB;AACA;AACA,QAAMC,MAAM,GAAGN,SAAS,CAAC;AACvBO,IAAAA,aAAa,EAAE;AACbC,MAAAA,IAAI,EAAE,EADO;AAEbC,MAAAA,KAAK,EAAE,EAFM;AAGbC,MAAAA,OAAO,EAAE;AAHI,KADQ;AAMvBC,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpBC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACD;AATsB,GAAD,CAAxB;AAWA,sBACE;AAAM,IAAA,QAAQ,EAAEN,MAAM,CAACY,YAAvB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,EAAE,EAAC,MADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,QAAQ,EAAEZ,MAAM,CAACa,YAJnB;AAKE,MAAA,KAAK,EAAEb,MAAM,CAACM,MAAP,CAAcJ;AALvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,QAAQ,EAAEF,MAAM,CAACa,YAJnB;AAKE,MAAA,KAAK,EAAEb,MAAM,CAACM,MAAP,CAAcH;AALvB;AAAA;AAAA;AAAA;AAAA,YAXF,eAmBE;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,eAoBE;AACE,MAAA,EAAE,EAAC,SADL;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,QAAQ,EAAEH,MAAM,CAACa,YAJnB;AAKE,MAAA,KAAK,EAAEb,MAAM,CAACM,MAAP,CAAcF;AALvB;AAAA;AAAA;AAAA;AAAA,YApBF,eA4BE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CA9CD;;AAgDA,eAAeL,UAAf","sourcesContent":["import { Formik, Field, Form, ErrorMessage, useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nimport styles from '../styles/contact.module.scss';\nimport whats from '../../assets/images/whats.png';\n\n// const Contact = () => {\n//   return (\n//     <Formik\n//       initialValues={{ name: '', email: '', message: '' }}\n//       validationSchema={Yup.object({\n//         name: Yup.string()\n//           .max(15, 'Must be 15 characters or less')\n//           .required('Required'),\n\n//         email: Yup.string().email('Invalid email address').required('Required'),\n\n//         message: Yup.string().required('Required'),\n//       })}\n//       onSubmit={async (values, { setSubmitting }) => {\n//         console.log('sent', JSON.stringify(values, null, 2));\n//         setSubmitting(false);\n//       }}\n//     >\n//       <div className={styles.container} id='contact'>\n//         <Form className={styles.form}>\n//           <h2>Get in touch!</h2>\n\n//           <label htmlFor='name'>Name</label>\n//           <Field name='name' type='text' />\n//           <ErrorMessage name='name' />\n\n//           <label htmlFor='email'>Email</label>\n//           <Field name='email' type='email' />\n//           <ErrorMessage name='email' />\n\n//           <label htmlFor='message'>Message</label>\n//           <Field name='message' type='text' />\n//           <ErrorMessage name='message' />\n\n//           <div className={styles.mobilewhats}>\n//             <a href='https://wa.me/5511981263581' target='_blank'>\n//               <p>\n//                 Or text me on Whatsapp <img src={whats} alt='' />\n//               </p>\n//             </a>\n\n//             <button type='submit'>Send</button>\n//           </div>\n//         </Form>\n//       </div>\n//     </Formik>\n//   );\n// };\n\n// export default Contact;\n\nconst SignupForm = () => {\n  // Pass the useFormik() hook initial form values and a submit function that will\n  // be called when the form is submitted\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      message: '',\n    },\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n      console.log(values);\n    },\n  });\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <label htmlFor='name'>Name</label>\n      <input\n        id='name'\n        name='name'\n        type='text'\n        onChange={formik.handleChange}\n        value={formik.values.name}\n      />\n\n      <label htmlFor='email'>Email Address</label>\n      <input\n        id='email'\n        name='email'\n        type='email'\n        onChange={formik.handleChange}\n        value={formik.values.email}\n      />\n\n      <label htmlFor='message'>Message</label>\n      <input\n        id='message'\n        name='message'\n        type='text'\n        onChange={formik.handleChange}\n        value={formik.values.message}\n      />\n\n      <button type='submit'>Submit</button>\n    </form>\n  );\n};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}