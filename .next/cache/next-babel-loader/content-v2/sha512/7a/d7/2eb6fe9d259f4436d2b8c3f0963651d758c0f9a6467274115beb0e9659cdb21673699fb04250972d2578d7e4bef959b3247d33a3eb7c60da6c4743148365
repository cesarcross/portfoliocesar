{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cesar/Code/portfoliocesar/src/pages/components/Contact.jsx\";\nimport { Formik, Field, Form, ErrorMessage, useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport styles from '../styles/contact.module.scss';\nimport whats from '../../assets/images/whats.png'; // const isRequired = () => {\n//   return alert('Please fill all the fields');\n// };\n\nconst notify = () => toast(`Information required`, {\n  position: 'bottom-center',\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  progress: undefined\n});\n\nconst messageSent = () => toast(`Message sent! Thanks`, {\n  position: 'bottom-center',\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  progress: undefined\n});\n\nconst messageFailed = () => toast(`Please fill all the fields`, {\n  position: 'bottom-center',\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  progress: undefined\n});\n\nconst Contact = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: '',\n      email: '',\n      message: ''\n    },\n    validationSchema: Yup.object({\n      name: Yup.string() // .max(15, 'Must be 15 characters or less')\n      .required(() => notify()),\n      email: Yup.string().email('Invalid email address').required(() => notify()),\n      message: Yup.string().required(() => notify())\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      console.log('sent', JSON.stringify(values, null, 2));\n      axios.post('/api/mail', values).then(function (response) {\n        console.log(response);\n        messageSent();\n      }).catch(function (error) {\n        console.log(error);\n      });\n      setSubmitting(false);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      id: \"contact\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Get in touch!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"message\",\n          component: \"textarea\",\n          rows: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.mobilewhats,\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://wa.me/5511981263581\",\n            target: \"_blank\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Or text me on Whatsapp \", /*#__PURE__*/_jsxDEV(\"img\", {\n                src: whats,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 40\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Contact; // const SignupForm = () => {\n//   // Pass the useFormik() hook initial form values and a submit function that will\n//   // be called when the form is submitted\n//   const formik = useFormik({\n//     initialValues: {\n//       name: '',\n//       email: '',\n//       message: '',\n//     },\n//     onSubmit: (values) => {\n//       alert(JSON.stringify(values, null, 2));\n//       console.log(values);\n//       axios\n//         .post('/api/mail', values)\n//         .then(function (response) {\n//           console.log(response);\n//         })\n//         .catch(function (error) {\n//           console.log(error);\n//         });\n//     },\n//   });\n//   return (\n//     <form onSubmit={formik.handleSubmit}>\n//       <label htmlFor='name'>Name</label>\n//       <input\n//         id='name'\n//         name='name'\n//         type='text'\n//         onChange={formik.handleChange}\n//         value={formik.values.name}\n//       />\n//       <label htmlFor='email'>Email Address</label>\n//       <input\n//         id='email'\n//         name='email'\n//         type='email'\n//         onChange={formik.handleChange}\n//         value={formik.values.email}\n//       />\n//       <label htmlFor='message'>Message</label>\n//       <input\n//         id='message'\n//         name='message'\n//         type='text'\n//         onChange={formik.handleChange}\n//         value={formik.values.message}\n//       />\n//       <button type='submit'>Submit</button>\n//     </form>\n//   );\n// };\n// export default SignupForm;","map":{"version":3,"sources":["/home/cesar/Code/portfoliocesar/src/pages/components/Contact.jsx"],"names":["Formik","Field","Form","ErrorMessage","useFormik","Yup","axios","ToastContainer","toast","styles","whats","notify","position","autoClose","hideProgressBar","closeOnClick","progress","undefined","messageSent","messageFailed","Contact","name","email","message","object","string","required","values","setSubmitting","console","log","JSON","stringify","post","then","response","catch","error","container","form","mobilewhats"],"mappings":"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","sourcesContent":["import { Formik, Field, Form, ErrorMessage, useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport styles from '../styles/contact.module.scss';\nimport whats from '../../assets/images/whats.png';\n\n// const isRequired = () => {\n//   return alert('Please fill all the fields');\n// };\n\nconst notify = () =>\n  toast(`Information required`, {\n    position: 'bottom-center',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    progress: undefined,\n  });\n\nconst messageSent = () =>\n  toast(`Message sent! Thanks`, {\n    position: 'bottom-center',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    progress: undefined,\n  });\n\nconst messageFailed = () =>\n  toast(`Please fill all the fields`, {\n    position: 'bottom-center',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    progress: undefined,\n  });\n\nconst Contact = () => {\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', message: '' }}\n      validationSchema={Yup.object({\n        name: Yup.string()\n          // .max(15, 'Must be 15 characters or less')\n          .required(() => notify()),\n\n        email: Yup.string()\n          .email('Invalid email address')\n          .required(() => notify()),\n\n        message: Yup.string().required(() => notify()),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        console.log('sent', JSON.stringify(values, null, 2));\n        axios\n          .post('/api/mail', values)\n          .then(function (response) {\n            console.log(response);\n            messageSent();\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n        setSubmitting(false);\n      }}\n    >\n      <div className={styles.container} id='contact'>\n        <Form className={styles.form}>\n          <h2>Get in touch!</h2>\n\n          <label htmlFor='name'>Name</label>\n          <Field name='name' type='text' />\n          <ErrorMessage name='name' />\n\n          <label htmlFor='email'>Email</label>\n          <Field name='email' type='email' />\n          <ErrorMessage name='email' />\n\n          <label htmlFor='message'>Message</label>\n          <Field name='message' component='textarea' rows='10' />\n          <ErrorMessage name='message' />\n\n          <div className={styles.mobilewhats}>\n            <a href='https://wa.me/5511981263581' target='_blank'>\n              <p>\n                Or text me on Whatsapp <img src={whats} alt='' />\n              </p>\n            </a>\n\n            <button type='submit'>Send</button>\n          </div>\n        </Form>\n      </div>\n    </Formik>\n  );\n};\n\nexport default Contact;\n\n// const SignupForm = () => {\n//   // Pass the useFormik() hook initial form values and a submit function that will\n//   // be called when the form is submitted\n//   const formik = useFormik({\n//     initialValues: {\n//       name: '',\n//       email: '',\n//       message: '',\n//     },\n//     onSubmit: (values) => {\n//       alert(JSON.stringify(values, null, 2));\n//       console.log(values);\n//       axios\n//         .post('/api/mail', values)\n//         .then(function (response) {\n//           console.log(response);\n//         })\n//         .catch(function (error) {\n//           console.log(error);\n//         });\n//     },\n//   });\n//   return (\n//     <form onSubmit={formik.handleSubmit}>\n//       <label htmlFor='name'>Name</label>\n//       <input\n//         id='name'\n//         name='name'\n//         type='text'\n//         onChange={formik.handleChange}\n//         value={formik.values.name}\n//       />\n\n//       <label htmlFor='email'>Email Address</label>\n//       <input\n//         id='email'\n//         name='email'\n//         type='email'\n//         onChange={formik.handleChange}\n//         value={formik.values.email}\n//       />\n\n//       <label htmlFor='message'>Message</label>\n//       <input\n//         id='message'\n//         name='message'\n//         type='text'\n//         onChange={formik.handleChange}\n//         value={formik.values.message}\n//       />\n\n//       <button type='submit'>Submit</button>\n//     </form>\n//   );\n// };\n\n// export default SignupForm;\n"]},"metadata":{},"sourceType":"module"}