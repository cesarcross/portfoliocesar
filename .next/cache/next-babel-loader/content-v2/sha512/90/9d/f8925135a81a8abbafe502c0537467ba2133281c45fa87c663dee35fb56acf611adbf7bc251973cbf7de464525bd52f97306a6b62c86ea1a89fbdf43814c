{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/home/cesar/Code/portfoliocesar/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/cesar/Code/portfoliocesar/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/cesar/Code/portfoliocesar/src/pages/todo/index.jsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import { Container } from './todo.style';\n// import Button from '../components/Button';\nimport { useState } from 'react';\nimport Tasks from '../components/Tasks';\nimport AddTask from '../components/AddTask';\n\nfunction ToDo() {\n  _s();\n\n  var _useState = useState([{\n    id: 1,\n    text: 'Dogwalker'\n  }, {\n    id: 2,\n    text: 'go to shopping'\n  }]),\n      tasks = _useState[0],\n      setTasks = _useState[1]; // Add Task\n\n\n  var addTask = function addTask(task) {\n    var id = Math.floor(Math.random() * 10000) + 1;\n\n    var newTask = _objectSpread({\n      id: id\n    }, task);\n\n    setTasks([].concat(_toConsumableArray(tasks), [newTask]));\n  }; // Save Task to LocalStorage\n  // Delete Task\n\n\n  var deleteTask = function deleteTask(id) {\n    setTasks(tasks.filter(function (task) {\n      return task.id !== id;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : 'No tasks to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDo, \"7/EkAPr0v4W4lX2I1aBPWpKYb1E=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/home/cesar/Code/portfoliocesar/src/pages/todo/index.jsx"],"names":["useState","Tasks","AddTask","ToDo","id","text","tasks","setTasks","addTask","task","Math","floor","random","newTask","deleteTask","filter","length"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAAA,kBACYH,QAAQ,CAAC,CACjC;AACEI,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADiC,EAKjC;AACED,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GALiC,CAAD,CADpB;AAAA,MACPC,KADO;AAAA,MACAC,QADA,iBAYd;;;AACA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AACxB,QAAML,EAAE,GAAGM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;;AACA,QAAMC,OAAO;AAAKT,MAAAA,EAAE,EAAFA;AAAL,OAAYK,IAAZ,CAAb;;AAEAF,IAAAA,QAAQ,8BAAKD,KAAL,IAAYO,OAAZ,GAAR;AACD,GALD,CAbc,CAoBd;AAEA;;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACV,EAAD,EAAQ;AACzBG,IAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAa,UAACN,IAAD;AAAA,aAAUA,IAAI,CAACL,EAAL,KAAYA,EAAtB;AAAA,KAAb,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEI;AAAhB;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGF,KAAK,CAACU,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEV,KAAd;AAAqB,MAAA,QAAQ,EAAEQ;AAA/B;AAAA;AAAA;AAAA;AAAA,YADD,GAGC,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAvCQX,I;;KAAAA,I;AAyCT,eAAeA,IAAf","sourcesContent":["// import { Container } from './todo.style';\n// import Button from '../components/Button';\nimport { useState } from 'react';\nimport Tasks from '../components/Tasks';\nimport AddTask from '../components/AddTask';\n\nfunction ToDo() {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'Dogwalker',\n    },\n    {\n      id: 2,\n      text: 'go to shopping',\n    },\n  ]);\n\n  // Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n\n    setTasks([...tasks, newTask]);\n  };\n\n  // Save Task to LocalStorage\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  return (\n    <div>\n      <h2>Tarefas</h2>\n      {/* <Button color='green' text='Add' /> */}\n      <AddTask onAdd={addTask} />\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} />\n      ) : (\n        'No tasks to show'\n      )}\n    </div>\n  );\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}