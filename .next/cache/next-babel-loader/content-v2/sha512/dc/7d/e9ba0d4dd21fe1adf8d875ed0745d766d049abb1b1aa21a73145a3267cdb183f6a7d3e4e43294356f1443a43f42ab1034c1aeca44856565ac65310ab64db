{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cesar/Code/portfoliocesar/src/pages/components/Contact.jsx\",\n    _this = this;\n\nimport { Formik, Field, Form, ErrorMessage, useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport styles from '../styles/contact.module.scss';\nimport whats from '../../assets/images/whats.png';\n\nvar isRequired = function isRequired() {\n  return alert('Please fill all the fields');\n};\n\nvar Contact = function Contact() {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: '',\n      email: '',\n      message: ''\n    },\n    validationSchema: Yup.object({\n      name: Yup.string() // .max(15, 'Must be 15 characters or less')\n      .required(isRequired),\n      email: Yup.string().email('Invalid email address').required(isRequired),\n      message: Yup.string().required(isRequired)\n    }),\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      console.log('sent', JSON.stringify(values, null, 2));\n      axios.post('/api/mail', values).then(function (response) {\n        console.log(response);\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n      setSubmitting(false);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      id: \"contact\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Get in touch!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"message\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.mobilewhats,\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://wa.me/5511981263581\",\n            target: \"_blank\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Or text me on Whatsapp \", /*#__PURE__*/_jsxDEV(\"img\", {\n                src: whats,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 40\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Contact;\nexport default Contact; // const SignupForm = () => {\n//   // Pass the useFormik() hook initial form values and a submit function that will\n//   // be called when the form is submitted\n//   const formik = useFormik({\n//     initialValues: {\n//       name: '',\n//       email: '',\n//       message: '',\n//     },\n//     onSubmit: (values) => {\n//       alert(JSON.stringify(values, null, 2));\n//       console.log(values);\n//       axios\n//         .post('/api/mail', values)\n//         .then(function (response) {\n//           console.log(response);\n//         })\n//         .catch(function (error) {\n//           console.log(error);\n//         });\n//     },\n//   });\n//   return (\n//     <form onSubmit={formik.handleSubmit}>\n//       <label htmlFor='name'>Name</label>\n//       <input\n//         id='name'\n//         name='name'\n//         type='text'\n//         onChange={formik.handleChange}\n//         value={formik.values.name}\n//       />\n//       <label htmlFor='email'>Email Address</label>\n//       <input\n//         id='email'\n//         name='email'\n//         type='email'\n//         onChange={formik.handleChange}\n//         value={formik.values.email}\n//       />\n//       <label htmlFor='message'>Message</label>\n//       <input\n//         id='message'\n//         name='message'\n//         type='text'\n//         onChange={formik.handleChange}\n//         value={formik.values.message}\n//       />\n//       <button type='submit'>Submit</button>\n//     </form>\n//   );\n// };\n// export default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/home/cesar/Code/portfoliocesar/src/pages/components/Contact.jsx"],"names":["Formik","Field","Form","ErrorMessage","useFormik","Yup","axios","styles","whats","isRequired","alert","Contact","name","email","message","object","string","required","values","setSubmitting","console","log","JSON","stringify","post","then","response","error","container","form","mobilewhats"],"mappings":"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","sourcesContent":["import { Formik, Field, Form, ErrorMessage, useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nimport styles from '../styles/contact.module.scss';\nimport whats from '../../assets/images/whats.png';\n\nconst isRequired = () => {\n  return alert('Please fill all the fields');\n};\n\nconst Contact = () => {\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', message: '' }}\n      validationSchema={Yup.object({\n        name: Yup.string()\n          // .max(15, 'Must be 15 characters or less')\n          .required(isRequired),\n\n        email: Yup.string().email('Invalid email address').required(isRequired),\n\n        message: Yup.string().required(isRequired),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        console.log('sent', JSON.stringify(values, null, 2));\n        axios\n          .post('/api/mail', values)\n          .then(function (response) {\n            console.log(response);\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n        setSubmitting(false);\n      }}\n    >\n      <div className={styles.container} id='contact'>\n        <Form className={styles.form}>\n          <h2>Get in touch!</h2>\n\n          <label htmlFor='name'>Name</label>\n          <Field name='name' type='text' />\n          <ErrorMessage name='name' />\n\n          <label htmlFor='email'>Email</label>\n          <Field name='email' type='email' />\n          <ErrorMessage name='email' />\n\n          <label htmlFor='message'>Message</label>\n          <Field name='message' type='text' />\n          <ErrorMessage name='message' />\n\n          <div className={styles.mobilewhats}>\n            <a href='https://wa.me/5511981263581' target='_blank'>\n              <p>\n                Or text me on Whatsapp <img src={whats} alt='' />\n              </p>\n            </a>\n\n            <button type='submit'>Send</button>\n          </div>\n        </Form>\n      </div>\n    </Formik>\n  );\n};\n\nexport default Contact;\n\n// const SignupForm = () => {\n//   // Pass the useFormik() hook initial form values and a submit function that will\n//   // be called when the form is submitted\n//   const formik = useFormik({\n//     initialValues: {\n//       name: '',\n//       email: '',\n//       message: '',\n//     },\n//     onSubmit: (values) => {\n//       alert(JSON.stringify(values, null, 2));\n//       console.log(values);\n//       axios\n//         .post('/api/mail', values)\n//         .then(function (response) {\n//           console.log(response);\n//         })\n//         .catch(function (error) {\n//           console.log(error);\n//         });\n//     },\n//   });\n//   return (\n//     <form onSubmit={formik.handleSubmit}>\n//       <label htmlFor='name'>Name</label>\n//       <input\n//         id='name'\n//         name='name'\n//         type='text'\n//         onChange={formik.handleChange}\n//         value={formik.values.name}\n//       />\n\n//       <label htmlFor='email'>Email Address</label>\n//       <input\n//         id='email'\n//         name='email'\n//         type='email'\n//         onChange={formik.handleChange}\n//         value={formik.values.email}\n//       />\n\n//       <label htmlFor='message'>Message</label>\n//       <input\n//         id='message'\n//         name='message'\n//         type='text'\n//         onChange={formik.handleChange}\n//         value={formik.values.message}\n//       />\n\n//       <button type='submit'>Submit</button>\n//     </form>\n//   );\n// };\n\n// export default SignupForm;\n"]},"metadata":{},"sourceType":"module"}